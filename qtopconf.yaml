#possible values: pbs, oar, sge
scheduler: sge

schedulers:
  pbs:
    pbsnodes_file: pbsnodes_a.txt
    qstatq_file: qstat_q.txt
    qstat_file: qstat.txt
  oar:
    oarnodes_s_file: oarnodes_s_Y.txt
    oarnodes_y_file: oarnodes_Y.txt
    oarstat_file: oarstat.txt
  sge:
    sge_file_stat: qstat.F.xml.stdout


# utilises lxml module. Needs to be installed in your system.
# Might result in segmentation fault.
faster_xml_parsing: False

# insert comment here
state_abbreviations:
  pbs:
    Q: queued_of_user
    R: running_of_user
    C: cancelled_of_user
    E: exiting_of_user
    W: waiting_of_user
  oar:
    E: Error
    F: Finishing
    S: Resuming
    H: Hold
    L: waiting_of_user
    W: queued_of_user
    R: running_of_user
    T: exiting_of_user
    S: cancelled_of_user
  sge:
    # ref: http://www.softpanorama.org/HPC/Grid_engine/Reference/qstat.shtml
    r: running_of_user
    E: exiting_of_user  # not real
    qw: queued_of_user
    C: cancelled_of_user  # not real
    W: waiting_of_user  # not real
    R: restarting_of_user
    Eqw: Eqw_of_user
    hqw: hold_of_user
    t: transferring_of_user
    T: threshold_reached
    dr: job_ending_of_user
    dt: dt_of_user
    s: suspended_of_user
    S: suspended_by_the_queue

# original OAR abbreviations:
# state_abbreviations = {
#     'W': 'Waiting',
#     'L': 'toLaunch',
#     'L': 'Launching',
#     'H': 'Hold',
#     'R': 'Running',
#     'T': 'Terminated',
#     'E': 'Error',
#     'E': 'toError',
#     'F': 'Finishing',
#     'S': 'Suspended',
#     'S': 'Resuming',
#     'W': 'toAckReservation',
# }

percentage: 0.8 # if less than PERCENTAGE x 100% of the matrices have jobs, perform a blind remap
possible_ids: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' # IDs of unix accounts, for the lower part of qtop
non_existent_node_symbol: '#'
# set the terminal window size manually so that the matrices can expand accordingly.
# If this is commented out, autodetection takes place (may not work, e.g. in Pycharm window)
term_size: [53, 176]
#term_size: [53, 126]  # for smaller screens, namely 1366 x 768
user_color_mappings:  # order should be from more generic-->more specific
# - '\w+': Gray_D  # enabling this cancels all saved accounts in colormap.py
# - '[\d]+': Gray_D
# - '[A-Za-z]+0\d{2}': Red_L
# - '[A-Za-z]+15\d': Gray_D
# - '\w*lhc\w*': Cyan_L
# - '\w+00\d': Blue
# - '\w*cms\w*': Red_L
 - '\w*cms048': Blue
 - '\w*cms193': Gray_L
 - '\w*atl\w+': Cyan_L
 - 'snielsen': Blue
 - 'ekalesaki': Cyan_L
 - 'zzhang': Red_L
 - 'mmravlak': Red_L
 - 'dbobbili': Cyan_L

# if cluster numbering should start on a number # above this, do automatic blind remapping
exotic_starting_wn_nr: 9000
remapping:
# - "([A-Za-z]+)([1-9]|[1-9][0-9]|[0-9][0-9][0-9])$": |
#     lambda m: m.group(1)+str(int(m.group(2))+250)
     # e.g. wn100 --> wn350, wn101 --> wn351 and so on
# - 'torvalds(\d+)' : 'tor\1'
# - 'gridlab(\d+)' : 'glab\1'
# - 'gridmon(\d*)' : 'mon\1'
 - '(.*?)cluster(.*?)': '\1-\2'  # remove "cluster" word from all node names
### - '--' : '-'  # removes dashes for shortening (can also replace them with something else, e.g. _
 - '-' : ''  # removes dashes for shortening (can also replace them with something else, e.g. _

sorting:
  # by_namelen_by_nr, roughly groups the nodes by name and then by number. Experimental!
#  user_sort: |
#      lambda d: (
#      len(d['domainname'].split('.', 1)[0].split('-')[0]),
#      ord(d['domainname'][0]),
#      int(re.sub(r'[A-Za-z_-]+', '', d['domainname'].split('.', 1)[0].split('-')[0]) or -1)
#      )
  user_sort: |
      lambda d: (
      d['np'],
      ord(d['domainname'][0]),
      len(d['domainname'].split('.', 1)[0].split('-')[0]),
      #int(d['domainname'].split('.', 1)[0].split('-')[1]),
      #int(re.sub(r'[A-Za-z_-]+', '', d['domainname'].split('.', 1)[0].split('-')[0]) or -1),  # by number
      )
#  user_sort: |  # by node state
#       lambda d: ord(d['state'])
  reverse: False

filtering:
#  - list_out: [0, 1, 2, 3, 16]
  - list_out_by_name: [gaia-73, gaia-80, gaia-81]
  # - list_out_by_name: [gaia-74, gaia-73, gaia-81, gaia-80, gaia-87, gaia-75, gaia-77, gaia-76, gaia-79, gaia-78]
  - list_out_by_name_pattern:
#    - r'^wn'
#    - r'^ps'
#    - r'p5'
    - r'moonshot'
#  - ranges_out: 1-12, 30-42
#  - list_out_by_node_state:
#    - 'E'

# what parts of qtop to display
user_display_parts:
 - job_accounting_summary
 - workernodes_matrix
 - user_accounts_pool_mappings

#wn_occupancy:
# - wn id lines
# - node state
# - temperature
# - core user map

workernodes_matrix:
 - wn id lines:
     max_len: 15
     # Masking/clipping functionality. How high should the # earliest node number be (e.g. 50), to make the previous WNs vanish
     min_masking_threshold: 9
     # Change this to an int if you want a custom cut matrix length
     user_cut_matrix_width: 0
     # character used for vertical separator, for the -o switch
     separator: '|'
     alt_label_highlight_colors: [White, Blue_L]
     # customised end labels
     end_labels:
       '1': ['={__WNID__}']
       '2': ['={_Worker_}', '={__Node__}']
       '3': ['={_Worker_}', '={__Node__}', '={___ID___}']
       '4': ['={________}', '={_Worker_}', '={__Node__}', '={___ID___}']
       '5': ['={__FOR___}', '={__SALE__}', '={_Worker_}', '={__Node__}', '={___ID___}']
       '6': ['={_SPACE__}', '={__FOR___}', '={__SALE__}', '={_Worker_}', '={__Node__}', '={___ID___}']
       '7': ['={__PLACE_}', '={__YOUR__}', '={_ADVERT_}', '={__HERE__}', '={_Worker_}', '={__Node__}', '={___ID___}']
# - temperature:
#     yaml key: temperature  # how it's found in the yaml file
#     label: Temperature (C)  # how to label it on the qtop matrix
#     option: {}
#     max_len: 1
 - node state:
     yaml key: state
     label: Node state
     max_len: 1
 - core user map:
     options1: {}
     options2: {}


# available colours:
#Blue Blue_L
#Brown
#Cyan Cyan_L
#Gray_D Gray_L
#Green Green_L
#normal
#Pink
#Purple
#Red Red_L
#White
#Yellow

# example how to extract the GECOS field from a copy of the passwd file
# NOT YET IMPLEMENTED
extract_info:
  sourcefile: $HOME/.local/qtop/getent_passwd_copy
  separator: ":"
  fields_to_use: 5